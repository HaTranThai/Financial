[2024-07-07T13:58:08.061+0000] {local_task_job_runner.py:120} INFO - ::group::Pre task execution logs
[2024-07-07T13:58:08.099+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: Final.clean_data scheduled__2024-07-07T13:53:11.984499+00:00 [queued]>
[2024-07-07T13:58:08.114+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: Final.clean_data scheduled__2024-07-07T13:53:11.984499+00:00 [queued]>
[2024-07-07T13:58:08.127+0000] {taskinstance.py:2306} INFO - Starting attempt 1 of 2
[2024-07-07T13:58:08.164+0000] {taskinstance.py:2330} INFO - Executing <Task(PythonOperator): clean_data> on 2024-07-07 13:53:11.984499+00:00
[2024-07-07T13:58:08.174+0000] {warnings.py:110} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:61: DeprecationWarning: This process (pid=104) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-07-07T13:58:08.177+0000] {standard_task_runner.py:63} INFO - Started process 113 to run task
[2024-07-07T13:58:08.180+0000] {standard_task_runner.py:90} INFO - Running: ['***', 'tasks', 'run', 'Final', 'clean_data', 'scheduled__2024-07-07T13:53:11.984499+00:00', '--job-id', '10', '--raw', '--subdir', 'DAGS_FOLDER/dag_test.py', '--cfg-path', '/tmp/tmpoq22fser']
[2024-07-07T13:58:08.182+0000] {standard_task_runner.py:91} INFO - Job 10: Subtask clean_data
[2024-07-07T13:58:08.282+0000] {task_command.py:426} INFO - Running <TaskInstance: Final.clean_data scheduled__2024-07-07T13:53:11.984499+00:00 [running]> on host c5037ef86ecc
[2024-07-07T13:58:08.456+0000] {taskinstance.py:2648} INFO - Exporting env vars: AIRFLOW_CTX_DAG_EMAIL='ha20040204@gmail.com' AIRFLOW_CTX_DAG_OWNER='HA' AIRFLOW_CTX_DAG_ID='Final' AIRFLOW_CTX_TASK_ID='clean_data' AIRFLOW_CTX_EXECUTION_DATE='2024-07-07T13:53:11.984499+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='scheduled__2024-07-07T13:53:11.984499+00:00'
[2024-07-07T13:58:08.458+0000] {taskinstance.py:430} INFO - ::endgroup::
[2024-07-07T13:58:08.513+0000] {warnings.py:110} WARNING - /opt/***/dags/dag_test.py:39: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-07-07T13:58:08.514+0000] {warnings.py:110} WARNING - /opt/***/dags/dag_test.py:40: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-07-07T13:58:13.314+0000] {warnings.py:110} WARNING - /opt/***/dags/dag_test.py:39: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-07-07T13:58:13.315+0000] {warnings.py:110} WARNING - /opt/***/dags/dag_test.py:40: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-07-07T13:58:16.734+0000] {warnings.py:110} WARNING - /opt/***/dags/dag_test.py:39: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-07-07T13:58:16.735+0000] {warnings.py:110} WARNING - /opt/***/dags/dag_test.py:40: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-07-07T13:58:18.376+0000] {warnings.py:110} WARNING - /opt/***/dags/dag_test.py:39: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-07-07T13:58:18.378+0000] {warnings.py:110} WARNING - /opt/***/dags/dag_test.py:40: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-07-07T13:58:20.655+0000] {warnings.py:110} WARNING - /opt/***/dags/dag_test.py:39: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-07-07T13:58:20.656+0000] {warnings.py:110} WARNING - /opt/***/dags/dag_test.py:40: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-07-07T13:58:21.940+0000] {warnings.py:110} WARNING - /opt/***/dags/dag_test.py:39: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-07-07T13:58:21.941+0000] {warnings.py:110} WARNING - /opt/***/dags/dag_test.py:40: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-07-07T13:58:30.542+0000] {warnings.py:110} WARNING - /opt/***/dags/dag_test.py:39: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-07-07T13:58:30.544+0000] {warnings.py:110} WARNING - /opt/***/dags/dag_test.py:40: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-07-07T13:58:37.129+0000] {warnings.py:110} WARNING - /opt/***/dags/dag_test.py:39: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-07-07T13:58:37.130+0000] {warnings.py:110} WARNING - /opt/***/dags/dag_test.py:40: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-07-07T13:58:43.608+0000] {warnings.py:110} WARNING - /opt/***/dags/dag_test.py:39: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-07-07T13:58:43.610+0000] {warnings.py:110} WARNING - /opt/***/dags/dag_test.py:40: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-07-07T13:58:51.610+0000] {warnings.py:110} WARNING - /opt/***/dags/dag_test.py:39: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-07-07T13:58:51.611+0000] {warnings.py:110} WARNING - /opt/***/dags/dag_test.py:40: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-07-07T13:58:52.803+0000] {warnings.py:110} WARNING - /opt/***/dags/dag_test.py:39: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-07-07T13:58:52.805+0000] {warnings.py:110} WARNING - /opt/***/dags/dag_test.py:40: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-07-07T13:58:53.169+0000] {warnings.py:110} WARNING - /opt/***/dags/dag_test.py:39: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-07-07T13:58:53.177+0000] {warnings.py:110} WARNING - /opt/***/dags/dag_test.py:40: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-07-07T13:58:55.342+0000] {warnings.py:110} WARNING - /opt/***/dags/dag_test.py:39: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-07-07T13:58:55.343+0000] {warnings.py:110} WARNING - /opt/***/dags/dag_test.py:40: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-07-07T13:58:58.101+0000] {warnings.py:110} WARNING - /opt/***/dags/dag_test.py:39: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-07-07T13:58:58.105+0000] {warnings.py:110} WARNING - /opt/***/dags/dag_test.py:40: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-07-07T13:58:59.629+0000] {logging_mixin.py:188} INFO - Successfully.
[2024-07-07T13:58:59.630+0000] {python.py:237} INFO - Done. Returned value was: True
[2024-07-07T13:58:59.634+0000] {taskinstance.py:441} INFO - ::group::Post task execution logs
[2024-07-07T13:58:59.706+0000] {taskinstance.py:1206} INFO - Marking task as SUCCESS. dag_id=Final, task_id=clean_data, run_id=scheduled__2024-07-07T13:53:11.984499+00:00, execution_date=20240707T135311, start_date=20240707T135808, end_date=20240707T135859
[2024-07-07T13:58:59.848+0000] {local_task_job_runner.py:240} INFO - Task exited with return code 0
[2024-07-07T13:58:59.951+0000] {taskinstance.py:3498} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-07-07T13:58:59.961+0000] {local_task_job_runner.py:222} INFO - ::endgroup::
