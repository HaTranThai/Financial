[2024-07-08T02:49:57.429+0000] {local_task_job_runner.py:120} INFO - ::group::Pre task execution logs
[2024-07-08T02:49:57.477+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: Final.clean_data manual__2024-07-08T02:45:56.090590+00:00 [queued]>
[2024-07-08T02:49:57.493+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: Final.clean_data manual__2024-07-08T02:45:56.090590+00:00 [queued]>
[2024-07-08T02:49:57.494+0000] {taskinstance.py:2306} INFO - Starting attempt 1 of 2
[2024-07-08T02:49:57.525+0000] {taskinstance.py:2330} INFO - Executing <Task(PythonOperator): clean_data> on 2024-07-08 02:45:56.090590+00:00
[2024-07-08T02:49:57.537+0000] {warnings.py:110} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:61: DeprecationWarning: This process (pid=94) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-07-08T02:49:57.540+0000] {standard_task_runner.py:63} INFO - Started process 96 to run task
[2024-07-08T02:49:57.540+0000] {standard_task_runner.py:90} INFO - Running: ['***', 'tasks', 'run', 'Final', 'clean_data', 'manual__2024-07-08T02:45:56.090590+00:00', '--job-id', '19', '--raw', '--subdir', 'DAGS_FOLDER/dag_test.py', '--cfg-path', '/tmp/tmp212qxuwv']
[2024-07-08T02:49:57.543+0000] {standard_task_runner.py:91} INFO - Job 19: Subtask clean_data
[2024-07-08T02:49:57.642+0000] {task_command.py:426} INFO - Running <TaskInstance: Final.clean_data manual__2024-07-08T02:45:56.090590+00:00 [running]> on host 3b89c1ba7f0f
[2024-07-08T02:49:57.803+0000] {taskinstance.py:2648} INFO - Exporting env vars: AIRFLOW_CTX_DAG_EMAIL='ha20040204@gmail.com' AIRFLOW_CTX_DAG_OWNER='HA' AIRFLOW_CTX_DAG_ID='Final' AIRFLOW_CTX_TASK_ID='clean_data' AIRFLOW_CTX_EXECUTION_DATE='2024-07-08T02:45:56.090590+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-07-08T02:45:56.090590+00:00'
[2024-07-08T02:49:57.805+0000] {taskinstance.py:430} INFO - ::endgroup::
[2024-07-08T02:49:57.854+0000] {warnings.py:110} WARNING - /opt/***/dags/dag_test.py:39: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-07-08T02:49:57.855+0000] {warnings.py:110} WARNING - /opt/***/dags/dag_test.py:40: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-07-08T02:50:04.152+0000] {warnings.py:110} WARNING - /opt/***/dags/dag_test.py:39: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-07-08T02:50:04.154+0000] {warnings.py:110} WARNING - /opt/***/dags/dag_test.py:40: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-07-08T02:50:12.711+0000] {warnings.py:110} WARNING - /opt/***/dags/dag_test.py:39: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-07-08T02:50:12.745+0000] {warnings.py:110} WARNING - /opt/***/dags/dag_test.py:40: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-07-08T02:50:19.323+0000] {warnings.py:110} WARNING - /opt/***/dags/dag_test.py:39: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-07-08T02:50:19.336+0000] {warnings.py:110} WARNING - /opt/***/dags/dag_test.py:40: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-07-08T02:50:27.815+0000] {warnings.py:110} WARNING - /opt/***/dags/dag_test.py:39: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-07-08T02:50:27.817+0000] {warnings.py:110} WARNING - /opt/***/dags/dag_test.py:40: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-07-08T02:50:30.182+0000] {warnings.py:110} WARNING - /opt/***/dags/dag_test.py:39: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-07-08T02:50:30.183+0000] {warnings.py:110} WARNING - /opt/***/dags/dag_test.py:40: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-07-08T02:50:40.902+0000] {warnings.py:110} WARNING - /opt/***/dags/dag_test.py:39: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-07-08T02:50:40.904+0000] {warnings.py:110} WARNING - /opt/***/dags/dag_test.py:40: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-07-08T02:50:50.176+0000] {warnings.py:110} WARNING - /opt/***/dags/dag_test.py:39: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-07-08T02:50:50.178+0000] {warnings.py:110} WARNING - /opt/***/dags/dag_test.py:40: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-07-08T02:51:02.494+0000] {warnings.py:110} WARNING - /opt/***/dags/dag_test.py:39: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-07-08T02:51:02.497+0000] {warnings.py:110} WARNING - /opt/***/dags/dag_test.py:40: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-07-08T02:51:24.111+0000] {warnings.py:110} WARNING - /opt/***/dags/dag_test.py:39: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-07-08T02:51:24.115+0000] {warnings.py:110} WARNING - /opt/***/dags/dag_test.py:40: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-07-08T02:51:24.164+0000] {local_task_job_runner.py:310} WARNING - State of this instance has been externally set to failed. Terminating instance.
[2024-07-08T02:51:24.179+0000] {local_task_job_runner.py:222} INFO - ::endgroup::
[2024-07-08T02:51:24.187+0000] {process_utils.py:132} INFO - Sending 15 to group 96. PIDs of all processes in the group: [96]
[2024-07-08T02:51:24.199+0000] {process_utils.py:87} INFO - Sending the signal 15 to group 96
[2024-07-08T02:51:24.212+0000] {taskinstance.py:2611} ERROR - Received SIGTERM. Terminating subprocesses.
[2024-07-08T02:51:24.232+0000] {taskinstance.py:441} INFO - ::group::Post task execution logs
[2024-07-08T02:51:24.513+0000] {process_utils.py:80} INFO - Process psutil.Process(pid=96, status='terminated', exitcode=0, started='02:49:57') (96) terminated with exit code 0
