[2024-07-07T12:07:42.202+0000] {local_task_job_runner.py:120} INFO - ::group::Pre task execution logs
[2024-07-07T12:07:42.228+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: Final_exam.clean_data manual__2024-07-07T12:07:10.168261+00:00 [queued]>
[2024-07-07T12:07:42.237+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: Final_exam.clean_data manual__2024-07-07T12:07:10.168261+00:00 [queued]>
[2024-07-07T12:07:42.239+0000] {taskinstance.py:2306} INFO - Starting attempt 1 of 2
[2024-07-07T12:07:42.270+0000] {taskinstance.py:2330} INFO - Executing <Task(PythonOperator): clean_data> on 2024-07-07 12:07:10.168261+00:00
[2024-07-07T12:07:42.281+0000] {warnings.py:110} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:61: DeprecationWarning: This process (pid=89) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-07-07T12:07:42.283+0000] {standard_task_runner.py:63} INFO - Started process 91 to run task
[2024-07-07T12:07:42.285+0000] {standard_task_runner.py:90} INFO - Running: ['***', 'tasks', 'run', 'Final_exam', 'clean_data', 'manual__2024-07-07T12:07:10.168261+00:00', '--job-id', '95', '--raw', '--subdir', 'DAGS_FOLDER/pipeline.py', '--cfg-path', '/tmp/tmpw_yz58qs']
[2024-07-07T12:07:42.287+0000] {standard_task_runner.py:91} INFO - Job 95: Subtask clean_data
[2024-07-07T12:07:42.359+0000] {task_command.py:426} INFO - Running <TaskInstance: Final_exam.clean_data manual__2024-07-07T12:07:10.168261+00:00 [running]> on host 257aaaf0c48f
[2024-07-07T12:07:42.524+0000] {taskinstance.py:2648} INFO - Exporting env vars: AIRFLOW_CTX_DAG_EMAIL='ha20040204@gmail.com' AIRFLOW_CTX_DAG_OWNER='HA' AIRFLOW_CTX_DAG_ID='Final_exam' AIRFLOW_CTX_TASK_ID='clean_data' AIRFLOW_CTX_EXECUTION_DATE='2024-07-07T12:07:10.168261+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-07-07T12:07:10.168261+00:00'
[2024-07-07T12:07:42.525+0000] {taskinstance.py:430} INFO - ::endgroup::
[2024-07-07T12:07:42.564+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:39: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-07-07T12:07:42.566+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:40: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-07-07T12:07:47.350+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:39: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-07-07T12:07:47.351+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:40: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-07-07T12:07:51.584+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:39: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-07-07T12:07:51.586+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:40: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-07-07T12:07:55.685+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:39: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-07-07T12:07:55.689+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:40: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-07-07T12:07:59.377+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:39: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-07-07T12:07:59.378+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:40: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-07-07T12:08:00.584+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:39: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-07-07T12:08:00.585+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:40: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-07-07T12:08:05.809+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:39: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-07-07T12:08:05.810+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:40: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-07-07T12:08:09.397+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:39: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-07-07T12:08:09.398+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:40: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-07-07T12:08:14.153+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:39: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-07-07T12:08:14.154+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:40: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-07-07T12:08:21.029+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:39: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-07-07T12:08:21.031+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:40: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-07-07T12:08:21.948+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:39: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-07-07T12:08:21.953+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:40: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-07-07T12:08:22.594+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:39: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-07-07T12:08:22.595+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:40: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-07-07T12:08:24.246+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:39: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-07-07T12:08:24.247+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:40: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-07-07T12:08:25.014+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:39: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-07-07T12:08:25.015+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:40: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-07-07T12:08:25.518+0000] {logging_mixin.py:188} INFO - Successfully.
[2024-07-07T12:08:25.519+0000] {python.py:237} INFO - Done. Returned value was: True
[2024-07-07T12:08:25.521+0000] {taskinstance.py:441} INFO - ::group::Post task execution logs
[2024-07-07T12:08:25.564+0000] {taskinstance.py:1206} INFO - Marking task as SUCCESS. dag_id=Final_exam, task_id=clean_data, run_id=manual__2024-07-07T12:07:10.168261+00:00, execution_date=20240707T120710, start_date=20240707T120742, end_date=20240707T120825
[2024-07-07T12:08:25.611+0000] {local_task_job_runner.py:240} INFO - Task exited with return code 0
[2024-07-07T12:08:25.641+0000] {taskinstance.py:3498} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-07-07T12:08:25.645+0000] {local_task_job_runner.py:222} INFO - ::endgroup::
