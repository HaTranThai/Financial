[2024-07-07T09:27:32.846+0000] {local_task_job_runner.py:120} INFO - ::group::Pre task execution logs
[2024-07-07T09:27:32.880+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: Final_exam.clean_data manual__2024-07-07T09:26:58.090565+00:00 [queued]>
[2024-07-07T09:27:32.892+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: Final_exam.clean_data manual__2024-07-07T09:26:58.090565+00:00 [queued]>
[2024-07-07T09:27:32.893+0000] {taskinstance.py:2306} INFO - Starting attempt 1 of 2
[2024-07-07T09:27:32.911+0000] {taskinstance.py:2330} INFO - Executing <Task(PythonOperator): clean_data> on 2024-07-07 09:26:58.090565+00:00
[2024-07-07T09:27:32.918+0000] {warnings.py:110} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:61: DeprecationWarning: This process (pid=101) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-07-07T09:27:32.920+0000] {standard_task_runner.py:63} INFO - Started process 103 to run task
[2024-07-07T09:27:32.921+0000] {standard_task_runner.py:90} INFO - Running: ['***', 'tasks', 'run', 'Final_exam', 'clean_data', 'manual__2024-07-07T09:26:58.090565+00:00', '--job-id', '71', '--raw', '--subdir', 'DAGS_FOLDER/pipeline.py', '--cfg-path', '/tmp/tmp9sfawdpp']
[2024-07-07T09:27:32.923+0000] {standard_task_runner.py:91} INFO - Job 71: Subtask clean_data
[2024-07-07T09:27:32.984+0000] {task_command.py:426} INFO - Running <TaskInstance: Final_exam.clean_data manual__2024-07-07T09:26:58.090565+00:00 [running]> on host 49c558fe4c5c
[2024-07-07T09:27:33.089+0000] {taskinstance.py:2648} INFO - Exporting env vars: AIRFLOW_CTX_DAG_EMAIL='ha20040204@gmail.com' AIRFLOW_CTX_DAG_OWNER='HA' AIRFLOW_CTX_DAG_ID='Final_exam' AIRFLOW_CTX_TASK_ID='clean_data' AIRFLOW_CTX_EXECUTION_DATE='2024-07-07T09:26:58.090565+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-07-07T09:26:58.090565+00:00'
[2024-07-07T09:27:33.091+0000] {taskinstance.py:430} INFO - ::endgroup::
[2024-07-07T09:27:33.129+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:39: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-07-07T09:27:33.130+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:40: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-07-07T09:27:39.309+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:39: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-07-07T09:27:39.310+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:40: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-07-07T09:27:45.442+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:39: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-07-07T09:27:45.443+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:40: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-07-07T09:27:48.434+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:39: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-07-07T09:27:48.436+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:40: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-07-07T09:27:53.265+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:39: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-07-07T09:27:53.267+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:40: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-07-07T09:27:55.264+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:39: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-07-07T09:27:55.266+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:40: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-07-07T09:28:01.621+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:39: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-07-07T09:28:01.623+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:40: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-07-07T09:28:06.835+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:39: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-07-07T09:28:06.836+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:40: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-07-07T09:28:12.193+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:39: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-07-07T09:28:12.195+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:40: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-07-07T09:28:19.332+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:39: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-07-07T09:28:19.334+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:40: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-07-07T09:28:20.443+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:39: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-07-07T09:28:20.445+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:40: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-07-07T09:28:20.804+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:39: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-07-07T09:28:20.805+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:40: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-07-07T09:28:22.161+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:39: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-07-07T09:28:22.162+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:40: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-07-07T09:28:23.082+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:39: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-07-07T09:28:23.083+0000] {warnings.py:110} WARNING - /opt/***/dags/pipeline.py:40: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-07-07T09:28:23.674+0000] {logging_mixin.py:188} INFO - Successfully.
[2024-07-07T09:28:23.675+0000] {python.py:237} INFO - Done. Returned value was: True
[2024-07-07T09:28:23.678+0000] {taskinstance.py:441} INFO - ::group::Post task execution logs
[2024-07-07T09:28:23.709+0000] {taskinstance.py:1206} INFO - Marking task as SUCCESS. dag_id=Final_exam, task_id=clean_data, run_id=manual__2024-07-07T09:26:58.090565+00:00, execution_date=20240707T092658, start_date=20240707T092732, end_date=20240707T092823
[2024-07-07T09:28:23.773+0000] {local_task_job_runner.py:240} INFO - Task exited with return code 0
[2024-07-07T09:28:23.808+0000] {taskinstance.py:3498} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-07-07T09:28:23.811+0000] {local_task_job_runner.py:222} INFO - ::endgroup::
